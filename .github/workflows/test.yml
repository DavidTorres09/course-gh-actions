name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: DevOps
    env:
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Clone the repository
        uses: actions/checkout@v3

      - name: Login in Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: build the docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/test-image:${{ env.IMAGE_TAG }} .

      - name: Upload the image to docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/test-image:${{ env.IMAGE_TAG }}

      - name: config ssh
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Generate docker-compose file with dynamic image tag
        run: |
          cat > mongoDB.Compose.yaml <<EOF
      version: '3.8'

      services:
        mongo:
          image: mongo:6.0
          ports:
            - "27018:27017"
          environment:
            MONGO_INITDB_ROOT_USERNAME: lotto
            MONGO_INITDB_ROOT_PASSWORD: lotto
            MONGO_INITDB_DATABASE: Lotto
          volumes:
            - mongo-test-data:/data/db
            - ./mongo-tools/init/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro

        test-runner:
          image: ${DOCKER_USERNAME}/test-image:${GITHUB_SHA}
          container_name: test-runner
          environment:
            MONGO_URI: mongodb://lotto:lotto@mongo:27017/Lotto?authSource=admin
          depends_on:
            - mongo

      volumes:
        mongo-test-data:
      EOF
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          GITHUB_SHA: ${{ github.sha }}


      - name: Copy docker-compose file to server
        run: |
          scp -o StrictHostKeyChecking=no mongoDB.Compose.yaml root@${{ secrets.DROPLET_IP }}:/root/test-suite/


      - name: Deploy the droplet
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << EOF
            set -e

            echo "🔐 Logging in to Docker Hub..."
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            echo "📦 Pulling latest test image (if needed)..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/test-image:${{ github.sha }} || true

            echo "🧹 Cleaning up previous stack..."
            docker compose -f /root/test-suite/mongoDB.Compose.yaml down -v || true

            echo "🚀 Starting test stack (Mongo + Runner)..."
            docker compose -f /root/test-suite/mongoDB.Compose.yaml up --abort-on-container-exit

            echo "📋 Showing logs:"
            docker compose -f /root/test-suite/mongoDB.Compose.yaml logs --no-color

          EOF



