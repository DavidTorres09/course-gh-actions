name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: DevOps
    env:
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Clone the repository
        uses: actions/checkout@v3

      - name: Login in Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: build the docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/test-image:${{ env.IMAGE_TAG }} .

      - name: Upload the image to docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/test-image:${{ env.IMAGE_TAG }}

      - name: config ssh
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy and run tests
        run: |
          IMAGE_TAG=${{ github.sha }}
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
            set -e  

            IMAGE_TAG=${{ github.sha }}

            echo "🔐 Logging in to Docker Hub..."
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            echo "📦 Pulling test image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/test-image:\$IMAGE_TAG

            echo "🧹 Cleaning up previous containers..."
            docker stop test-container test-mongo || true
            docker rm test-container test-mongo || true

            echo "💾 Removing old Mongo volume (optional)..."
            docker volume rm mongo_data || true

            echo "🐳 Starting MongoDB..."
            docker run -d \
              --name test-mongo \
              --network=host \
              -v mongo_data:/data/db \
              -v /root/test-suite/mongo-tools/init/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro \
              -e MONGO_INITDB_ROOT_USERNAME=lotto \
              -e MONGO_INITDB_ROOT_PASSWORD=lotto \
              mongo:6.0

            echo "⏳ Waiting 5s for Mongo to initialize..."
            sleep 5  

            echo "🚀 Starting test container..."
            docker run --name test-container \
              --network=host \
              -e MONGO_URI="mongodb://lotto:lotto@localhost:27017/Lotto?authMechanism=SCRAM-SHA-1" \
              ${{ secrets.DOCKER_USERNAME }}/test-image:\$IMAGE_TAG

            echo "📋 Showing logs of test container:"
            docker logs test-container

            echo "🔍 Checking exit code..."
            EXIT_CODE=\$(docker inspect test-container --format='{{.State.ExitCode}}')
            if [ "\$EXIT_CODE" -ne 0 ]; then
              echo "❌ Test container failed with exit code \$EXIT_CODE"
              exit 1
            fi

          EOF

