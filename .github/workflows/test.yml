name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: self-hosted
    environment:
      name: DevOps
    env:
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: üíæ Clone the repository
        uses: actions/checkout@v3

      #- name: Login to Docker Hub
        #  uses: docker/login-action@v2
        #  with:
      #    username: ${{ secrets.DOCKER_USERNAME }}
      #    password: ${{ secrets.DOCKER_PASSWORD }}

      #- name: Build the Docker image
        #  run: docker build -t ${{ secrets.DOCKER_USERNAME }}/test-image:${{ env.IMAGE_TAG }} .

      #- name: Push the image to Docker Hub
        #  run: docker push ${{ secrets.DOCKER_USERNAME }}/test-image:${{ env.IMAGE_TAG }}

      - name: üîè Add SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: üìù Copy project to droplet
        run: |
          scp -o StrictHostKeyChecking=no -r . root@${{ secrets.DROPLET_IP }}:/root/project

      - name: üîê Set execution permissions on scripts
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
            cd /root/project
            chmod +x /root/project/mongo-tools/scripts/install-mongo-tools.sh
            chmod +x /root/project/mongo-tools/scripts/reset.sh
            chmod +x /root/project/mongo-tools/scripts/run_tests.sh
          EOF

      - name: üì¶ Install MongoDB CLI tools
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
            /root/project/mongo-tools/scripts/install-mongo-tools.sh
          EOF

      - name: üßπ Reset test MongoDB container and volume
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
            cd /root/project
            /root/project/mongo-tools/scripts/reset.sh
          EOF

      - name: üîÅ Restore DB before desktop tests
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
            cd /root/project
            /root/project/mongo-tools/scripts/restore.sh -t "mongodb://lotto:lotto@localhost:27017/Lotto?authMechanism=SCRAM-SHA-1" -d "Lotto" -i "/root/project/mongo-tools/backups/backup.archive.gz"
          EOF

      - name: üóìÔ∏è Update dates before desktop tests
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
            cd /root/project
            /root/project/mongo-tools/scripts/update_dates.sh -t "mongodb://lotto:lotto@localhost:27017/Lotto?authMechanism=SCRAM-SHA-1" -d "Lotto" -i "/root/project/mongo-tools/backups/backup.archive.gz"
          EOF

      - name: üñ•Ô∏è Run desktop Playwright tests
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
            cd /root/project
            FORCE_COLOR=1 npx playwright test tests/google.spec.ts --reporter=list
          EOF

      - name: üîÅ Restore DB before mobile tests
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
            cd /root/project
            /root/project/mongo-tools/scripts/restore.sh -t "mongodb://lotto:lotto@localhost:27017/Lotto?authMechanism=SCRAM-SHA-1" -d "Lotto" -i "/root/project/mongo-tools/backups/backup.archive.gz"
          EOF

      - name: üóìÔ∏è Update dates before mobile tests
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
            cd /root/project
            /root/project/mongo-tools/scripts/update_dates.sh -t "mongodb://lotto:lotto@localhost:27017/Lotto?authMechanism=SCRAM-SHA-1" -d "Lotto" -i "/root/project/mongo-tools/backups/backup.archive.gz"
          EOF

      - name: üñ•Ô∏è Run mobile Playwright tests
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
            cd /root/project
            FORCE_COLOR=1 npx playwright test tests/google.spec.ts --reporter=list
          EOF
