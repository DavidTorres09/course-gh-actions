name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: DevOps
    env:
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Clone the repository
        uses: actions/checkout@v3

      - name: Login in Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: build the docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/test-image:${{ env.IMAGE_TAG }} .

      - name: Upload the image to docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/test-image:${{ env.IMAGE_TAG }}

      - name: config ssh
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Run test stack directly
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
            set -e

            echo "üîê Docker login..."
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            echo "üßπ Clean previous containers/volumes..."
            docker stop test-mongo || true
            docker rm test-mongo || true
            docker volume rm mongo_data || true

            echo "üê≥ Start MongoDB with init..."
            docker compose up -d

            echo "‚è≥ Wait for Mongo to be ready..."
            until mongosh "mongodb://lotto:lotto@localhost:27017/Lotto?authMechanism=SCRAM-SHA-1" --eval "db.runCommand({ ping: 1 })" >/dev/null 2>&1; do
              echo "‚è≥ Mongo not ready yet..."
              sleep 2
            done
            echo "‚úÖ Running test container..."

            docker run --rm \
              --network=host \
              -e MONGO_URI="mongodb://lotto:lotto@localhost:27017/Lotto?authSource=admin" \
              ${{ secrets.DOCKER_USERNAME }}/test-image:${{ github.sha }}

          EOF



